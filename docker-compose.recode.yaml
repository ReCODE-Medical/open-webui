services:
  open-webui:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: open-webui
    volumes:
      - open-webui:/app/backend/data
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    ports:
      - 8080:8080
    environment:
      - 'WEBUI_SECRET_KEY='
      - 'WEBSOCKET_MANAGER=redis'
      - 'WEBSOCKET_REDIS_URL=redis://redis:6379/0'
      - 'DATABASE_URL=postgresql://postgres:postgres@postgres:5432/recode-db'
      - 'DATABASE_POOL_SIZE=10'
      - 'DATABASE_POOL_MAX_OVERFLOW=20'
      - 'DATABASE_POOL_TIMEOUT=30'
      - 'VECTOR_DB=milvus'
      - 'MILVUS_URI=milvus://milvus:19530'
    restart: unless-stopped

  postgres:
    image: postgres:17-alpine
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: recode-db
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d recode-db"]
      interval: 1s
      timeout: 5s
      retries: 10

  redis:
    image: redis:alpine
    container_name: redis
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 1s
      timeout: 3s
      retries: 5
    restart: always

  milvus:
    image: milvusdb/milvus:v2.4.12
    container_name: milvus
    volumes:
      - milvus-data:/var/lib/milvus
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 19530"]
      interval: 1s
      timeout: 10s
      retries: 10

volumes:
  open-webui: {}
  redis-data: {}
  postgres-data: {}
  milvus-data: {}
